matplotlib ______  2021-11-05 12:03:01,288 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:03:01,446 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:03:01,470 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:03:01,470 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:03:01,471 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:03:01,471 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:03:01,704 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:03:01,817 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:03:02,399 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,399 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:03:02,400 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:03:04,058 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:03:04,061 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:03:04,291 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:03:04,302 : INFO : 
 logger import function
win_main ______  2021-11-05 12:03:04,302 : INFO : 
 logging from start up
win_main ______  2021-11-05 12:03:04,792 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 12:03:05,204 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 12:03:06,149 : INFO : 
 logging from win_main2 start up
matplotlib ______  2021-11-05 12:06:07,979 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:06:08,048 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:06:08,056 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:06:08,056 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:06:08,056 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:06:08,056 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:06:08,173 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:06:08,195 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,382 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:06:08,383 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:06:08,797 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:06:08,800 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:06:08,825 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:06:08,828 : INFO : 
 logger import function
win_main ______  2021-11-05 12:06:08,828 : INFO : 
 logging from start up
win_main ______  2021-11-05 12:06:08,847 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 12:06:08,853 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 12:06:08,919 : INFO : 
 logging from win_main2 start up
matplotlib ______  2021-11-05 12:44:23,125 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:44:23,149 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:44:23,154 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:44:23,154 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:44:23,154 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:44:23,154 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:44:23,194 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:44:23,203 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:44:23,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:44:23,387 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:44:23,387 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:44:23,403 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:44:23,407 : INFO : 
 logger import function
win_main ______  2021-11-05 12:44:23,407 : INFO : 
 logging from start up
win_main ______  2021-11-05 12:44:23,412 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 12:44:23,415 : INFO : 
 Values loaded from load_setting
matplotlib ______  2021-11-05 12:49:34,177 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:49:34,194 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:49:34,196 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:49:34,197 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:49:34,197 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:49:34,197 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:49:34,235 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:49:34,242 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:49:34,318 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,318 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:49:34,319 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:49:34,433 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:49:34,434 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:49:34,446 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:49:34,448 : INFO : 
 logger import function
win_main ______  2021-11-05 12:49:34,448 : INFO : 
 logging from start up
win_main ______  2021-11-05 12:49:34,452 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 12:49:34,455 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 12:49:34,668 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 12:49:34,845 : INFO : 
 start__ win_main2 start class window_main init
matplotlib ______  2021-11-05 12:51:40,365 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:51:40,384 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:51:40,388 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:51:40,388 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:51:40,388 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:51:40,388 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:51:40,420 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:51:40,428 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:51:40,496 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:51:40,655 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:51:40,655 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:51:40,686 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:51:40,688 : INFO : 
 logger import function
win_main ______  2021-11-05 12:51:40,689 : INFO : 
 logging from start up
matplotlib ______  2021-11-05 12:54:01,117 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:54:01,138 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:54:01,138 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:54:01,138 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:54:01,138 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:54:01,138 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:54:01,182 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:54:01,190 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:54:01,270 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,270 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,270 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:54:01,270 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:54:01,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:54:01,394 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:54:01,394 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:54:01,406 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:54:01,410 : INFO : 
 logger import function
win_main ______  2021-11-05 12:54:01,410 : INFO : 
 logging from start up
matplotlib ______  2021-11-05 12:57:30,407 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 12:57:30,429 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 12:57:30,432 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 12:57:30,432 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 12:57:30,432 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 12:57:30,432 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 12:57:30,474 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 12:57:30,474 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 12:57:30,566 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 12:57:30,686 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 12:57:30,686 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 12:57:30,696 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 12:57:30,704 : INFO : 
 logger import function
win_main ______  2021-11-05 12:57:30,704 : INFO : 
 logging from start up
win_main ______  2021-11-05 12:57:30,817 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 12:57:30,822 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 12:57:30,825 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 12:57:30,921 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 12:57:31,030 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 12:57:31,170 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 12:57:31,317 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 14:05:02,171 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:05:02,201 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:05:02,206 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:05:02,206 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:05:02,206 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:05:02,206 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:05:02,417 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:05:02,446 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:05:02,591 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:05:02,876 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:05:02,876 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:05:02,897 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:05:02,906 : INFO : 
 logger import function
win_main ______  2021-11-05 14:05:02,906 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:05:03,117 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:05:03,126 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:05:03,129 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:05:03,296 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:05:03,446 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:05:03,558 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:05:03,694 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 14:11:00,612 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:11:00,646 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:11:00,646 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:11:00,646 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:11:00,646 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:11:00,646 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:11:00,686 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:11:00,691 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:11:00,777 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:11:00,911 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:11:00,916 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:11:00,926 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:11:00,930 : INFO : 
 logger import function
win_main ______  2021-11-05 14:11:00,930 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:11:01,050 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:11:01,054 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:11:01,056 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:11:01,148 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:11:01,270 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:11:01,350 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:11:01,505 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 14:12:24,066 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:12:24,087 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:12:24,090 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:12:24,090 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:12:24,090 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:12:24,090 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:12:24,130 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:12:24,139 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:12:24,213 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:12:24,214 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:12:24,335 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:12:24,336 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:12:24,349 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:12:24,350 : INFO : 
 logger import function
win_main ______  2021-11-05 14:12:24,351 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:12:24,464 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:12:24,468 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:12:24,470 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:12:24,565 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:12:24,678 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:12:24,778 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:12:24,917 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 14:12:25,042 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 14:12:25,042 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,042 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,042 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,043 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,044 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,044 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,044 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,044 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,045 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,046 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,047 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,048 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,049 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,050 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,051 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,052 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,053 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,054 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,055 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,056 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,057 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,058 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,059 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,060 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,060 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,060 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,060 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,060 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,061 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,062 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,063 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,064 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,064 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,065 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,065 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,065 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,065 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,065 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,066 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,067 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:12:25,068 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,069 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,070 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,071 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,072 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,073 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,074 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,075 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,076 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,077 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,077 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,077 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,077 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,078 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,079 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,079 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,079 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,080 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,080 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,081 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,081 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,081 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,082 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,083 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,084 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,085 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,086 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,087 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,088 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,089 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,090 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,091 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,092 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,093 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,094 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,095 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,096 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,097 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,098 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,099 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,100 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,101 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,102 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,103 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,104 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,105 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,106 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,107 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,108 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,109 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,110 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,111 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,112 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,113 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,114 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,115 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,116 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,117 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,118 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,119 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,120 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,121 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,123 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,124 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,125 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,126 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,127 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,128 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,129 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,130 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,131 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,132 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:12:25,155 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,156 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,158 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,159 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,160 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,161 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,162 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,163 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,164 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,165 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:12:25,166 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,167 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,168 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,169 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,170 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,171 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,172 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,173 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,174 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,175 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,176 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,177 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,178 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,179 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,180 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,181 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,182 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,183 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,184 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,185 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,186 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,187 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,188 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,189 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,190 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,191 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,192 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,193 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,194 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,195 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,196 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,197 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,198 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,199 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,200 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,201 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,202 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,203 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,204 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,205 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,206 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,207 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,208 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,209 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,210 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,211 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,213 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,214 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,215 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,216 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,217 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,218 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,219 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,220 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,221 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,222 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,223 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,224 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,225 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,226 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,227 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,228 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,229 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,230 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,231 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,232 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:12:25,233 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,234 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,235 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,236 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,237 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,238 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,239 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:12:25,240 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 14:12:25,340 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 14:12:25,348 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 14:12:25,349 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 14:12:25,350 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 14:52:18,950 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:52:18,980 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:52:18,983 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:52:18,983 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:52:18,983 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:52:18,983 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:52:19,033 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:52:19,043 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,150 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:52:19,151 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:52:19,345 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:52:19,345 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:52:19,362 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:52:19,365 : INFO : 
 logger import function
win_main ______  2021-11-05 14:52:19,366 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:52:19,503 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:52:19,511 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:52:19,516 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:52:19,639 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:52:19,760 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:52:19,843 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:52:20,014 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 14:52:20,146 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:52:20,147 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,148 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,149 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,150 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,151 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,152 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:52:20,153 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,154 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,155 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,156 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,157 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,158 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,159 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,160 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,161 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,161 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,161 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,161 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,161 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,162 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,163 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:52:20,163 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,163 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,163 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,164 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,164 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,164 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,164 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,164 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,165 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,166 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,166 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,166 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,167 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,167 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,167 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,168 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,168 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,168 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,169 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,169 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,169 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,169 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,169 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,170 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,170 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,170 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,171 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,171 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,171 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,171 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,171 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,172 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,172 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,172 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,172 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,172 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,176 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,176 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,177 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,177 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,177 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,177 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,178 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,179 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,180 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,181 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,182 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,183 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,184 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,185 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,186 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,187 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,188 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,189 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,190 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,191 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,191 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,191 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,191 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,192 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,192 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,192 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,192 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,193 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,193 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,193 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,193 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,194 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,195 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,196 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,197 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,198 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,199 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,200 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,201 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,202 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,203 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,204 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,205 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,206 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,207 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,208 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,209 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,210 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,211 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,213 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,214 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,215 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,216 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,217 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,218 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,219 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,220 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,221 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,222 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,223 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,224 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,225 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,225 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,225 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,225 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,226 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,227 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,227 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,228 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,228 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,228 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,228 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,228 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,229 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,230 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,231 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,232 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,233 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,234 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,235 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,236 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,237 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,238 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,239 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,240 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,241 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,242 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,243 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,244 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,245 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,246 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,247 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,248 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 14:52:20,265 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,266 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,267 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,268 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,269 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,270 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,271 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,272 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,273 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,274 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,274 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,274 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,274 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,275 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,275 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,275 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,275 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,275 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,276 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,277 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,278 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,279 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,280 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,281 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,282 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,283 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,284 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,285 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,286 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,287 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,288 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,289 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,290 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,291 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,292 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,292 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,292 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,293 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,294 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,295 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,296 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,297 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,298 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,299 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,300 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,301 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,302 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,303 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,304 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,305 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,306 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,307 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,308 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,309 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,310 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,311 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,312 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,313 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,314 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,315 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,316 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,317 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,318 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,319 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,320 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,321 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,322 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,323 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,324 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,325 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,326 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,327 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,328 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,329 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,330 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,331 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,332 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,333 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,334 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,335 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,336 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,337 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,338 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,339 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,340 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,341 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,342 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,343 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,344 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:52:20,345 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,346 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:52:20,347 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:52:20,348 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,348 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:52:20,348 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:52:20,348 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 14:52:20,446 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 14:52:20,451 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 14:52:20,452 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 14:52:20,453 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 14:53:37,778 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:53:37,801 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:53:37,805 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:53:37,805 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:53:37,805 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:53:37,805 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:53:37,851 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:53:37,863 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,940 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,941 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:53:37,941 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:53:38,073 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:53:38,073 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:53:38,091 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:53:38,092 : INFO : 
 logger import function
win_main ______  2021-11-05 14:53:38,092 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:53:38,222 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:53:38,229 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:53:38,238 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:53:38,344 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:53:38,464 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:53:38,530 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:53:38,692 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,824 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,825 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,826 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,827 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:53:38,828 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,829 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,830 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,831 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,832 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,833 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,834 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,835 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,837 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,838 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,839 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,840 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,841 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,842 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,843 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,844 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,845 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,846 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,847 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:53:38,848 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,849 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,850 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,851 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,852 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,853 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,854 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,855 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,856 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,857 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,858 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,859 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,860 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,861 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,861 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,861 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,861 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,861 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,862 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,863 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,864 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,865 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,866 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,867 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,868 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,869 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,870 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,871 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,872 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,873 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,874 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,875 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,876 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,877 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,878 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,879 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,879 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,879 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,879 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,879 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,880 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,880 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,881 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,882 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,882 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,882 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,883 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,883 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,883 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,883 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,883 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,884 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,884 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,885 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,885 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,886 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,886 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,886 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,886 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,887 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,887 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,888 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,888 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,888 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,889 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,889 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,889 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,889 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,890 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,890 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,891 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,892 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,893 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,894 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,895 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,896 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,897 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,898 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,899 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,900 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,901 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,902 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,903 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,904 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,905 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,906 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,907 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,908 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,909 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,910 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,911 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,911 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,911 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,911 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,911 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,912 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,912 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,912 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,912 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,912 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,913 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,914 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,915 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,916 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,917 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,918 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,919 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,920 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,921 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,922 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,923 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,924 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,925 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,925 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,940 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:53:38,941 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,942 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:53:38,943 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,944 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,945 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,946 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,947 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,948 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,949 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,950 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,951 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,952 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,953 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,954 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,955 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,956 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,957 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,958 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,959 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,960 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,961 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,962 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,963 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,964 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,965 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,966 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,967 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,968 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,969 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,970 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,971 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,972 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,973 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,974 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,975 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:53:38,976 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,977 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,978 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,979 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,980 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,981 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,982 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,983 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,984 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,985 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,986 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,987 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,988 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,989 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,990 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,991 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,992 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,993 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,994 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,995 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,995 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,995 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,996 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,997 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,998 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:38,999 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,000 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,001 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:53:39,002 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,003 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,004 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,005 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,006 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,007 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,008 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,009 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,010 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,011 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,011 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,011 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,011 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,012 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,012 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,012 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,013 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:39,014 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:39,015 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,016 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:39,017 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,018 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,019 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,020 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,021 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,022 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,023 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:53:39,024 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,025 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:53:39,025 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:53:39,025 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 14:53:39,124 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 14:53:39,128 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 14:53:39,129 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 14:53:39,130 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 14:55:31,533 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 14:55:31,549 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 14:55:31,549 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 14:55:31,549 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 14:55:31,549 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 14:55:31,549 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 14:55:31,580 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 14:55:31,596 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 14:55:31,665 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 14:55:31,781 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 14:55:31,781 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 14:55:31,797 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 14:55:31,802 : INFO : 
 logger import function
win_main ______  2021-11-05 14:55:31,803 : INFO : 
 logging from start up
win_main ______  2021-11-05 14:55:31,915 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 14:55:31,920 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 14:55:31,926 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 14:55:32,050 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 14:55:32,176 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 14:55:32,250 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 14:55:32,358 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 14:55:32,484 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 14:55:32,484 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,485 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,486 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,487 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:55:32,488 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,489 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,490 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,491 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,492 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,493 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,494 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,495 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,496 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,497 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,498 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,499 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,500 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,501 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,502 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,503 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,504 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,505 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,506 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,507 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,507 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,508 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,508 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,509 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,510 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,511 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,512 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,513 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,514 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,515 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,516 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,517 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,518 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,519 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,520 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,521 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,521 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,521 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,521 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,521 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,522 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,523 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,524 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,524 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,524 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,525 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,526 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,526 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,526 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,527 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,528 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,528 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,528 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,528 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,528 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,529 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,530 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:55:32,531 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,532 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,533 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,534 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,535 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,536 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,537 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,538 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,539 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,540 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,541 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,542 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,543 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,544 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,545 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,546 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,547 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,548 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,549 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,550 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,551 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,552 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,553 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,554 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,555 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,556 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,557 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,558 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,559 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,560 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,561 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,562 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,563 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,564 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,565 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,566 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,567 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,568 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,569 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,570 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,571 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,572 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,573 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,589 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,605 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,620 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,636 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 14:55:32,650 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 14:55:32,743 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 14:55:32,752 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 14:55:32,753 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 14:55:32,754 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:09:31,498 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:09:31,530 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:09:31,534 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:09:31,534 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:09:31,534 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:09:31,534 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:09:31,588 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:09:31,608 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,718 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:09:31,722 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:09:31,993 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:09:31,994 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:09:32,020 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:09:32,024 : INFO : 
 logger import function
win_main ______  2021-11-05 15:09:32,024 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:09:32,215 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:09:32,225 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:09:32,230 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:09:32,399 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:09:32,525 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:09:32,625 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:09:32,756 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 15:09:32,989 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,990 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,991 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,992 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,993 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,994 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,995 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,996 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,997 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:32,998 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:32,999 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,000 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,001 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,001 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,001 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,001 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,001 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,002 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,002 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,002 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,003 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,004 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,005 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,006 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,007 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,008 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,009 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,009 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,009 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,009 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,009 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,010 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,011 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,012 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,013 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,014 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,015 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,016 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,017 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,017 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,017 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,017 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,018 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,019 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,020 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,021 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,022 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,023 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,024 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,025 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,026 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,027 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,028 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,029 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,030 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,031 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,032 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,033 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,034 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,035 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,036 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,037 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,038 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,039 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,040 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,041 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,042 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,043 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,044 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,045 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,046 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,047 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,048 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,049 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,050 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,051 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,052 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,053 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,054 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,055 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,056 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,057 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,058 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,059 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,060 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,061 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,062 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,063 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,064 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,065 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,066 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,067 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,068 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,072 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:09:33,098 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:09:33,099 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,100 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,101 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,101 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,101 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,101 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,101 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,102 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,103 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,104 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,105 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,106 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,107 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,108 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,109 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,110 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,111 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,112 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,113 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,114 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,115 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,116 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,117 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,118 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,119 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,120 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,121 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,122 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,123 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,124 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,125 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,126 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,127 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,128 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,129 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,130 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,131 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:09:33,132 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,133 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,133 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,133 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,133 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,133 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,134 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,134 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,134 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,134 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,134 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,135 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,139 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,143 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,147 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,151 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,155 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,159 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,163 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,167 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,171 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,172 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,176 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,180 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,184 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,188 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,189 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,190 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,191 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,192 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,193 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,194 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,195 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,196 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,197 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,198 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:09:33,199 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,200 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,200 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,200 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,200 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,200 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:09:33,201 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,203 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,204 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,205 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,206 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,207 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,208 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,209 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,210 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,211 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,212 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,213 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,214 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,215 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,216 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,217 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,218 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,219 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,220 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,221 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,222 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,223 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,224 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,225 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,226 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,227 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,228 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,229 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,230 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,231 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,232 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,233 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,234 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:09:33,235 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:09:33,236 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:09:33,236 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,236 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:09:33,236 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:09:33,236 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:09:33,364 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:09:33,369 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:09:33,370 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:09:33,371 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:10:11,550 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:10:11,586 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:10:11,590 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:10:11,590 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:10:11,590 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:10:11,590 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:10:11,672 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:10:11,684 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:11,754 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:10:11,883 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:10:11,887 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:10:11,898 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:10:11,903 : INFO : 
 logger import function
win_main ______  2021-11-05 15:10:11,903 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:10:12,014 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:10:12,020 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:10:12,023 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:10:12,113 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:10:12,211 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:10:12,282 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:10:12,398 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 15:10:59,509 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:10:59,530 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:10:59,532 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:10:59,532 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:10:59,532 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:10:59,532 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:10:59,577 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:10:59,584 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:10:59,668 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:10:59,669 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:10:59,801 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:10:59,801 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:10:59,818 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:10:59,820 : INFO : 
 logger import function
win_main ______  2021-11-05 15:10:59,820 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:10:59,933 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:10:59,937 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:10:59,944 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:11:00,045 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:11:00,148 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:11:00,242 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:11:00,376 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 15:11:10,130 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:11:10,154 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:11:10,156 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:11:10,156 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:11:10,156 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:11:10,156 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:11:10,194 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:11:10,201 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:11:10,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,271 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:10,272 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:11:10,386 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:11:10,386 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:11:10,398 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:11:10,400 : INFO : 
 logger import function
win_main ______  2021-11-05 15:11:10,400 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:11:10,509 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:11:10,514 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:11:10,516 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:11:10,604 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:11:10,715 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:11:10,783 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:11:10,918 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 15:11:56,920 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:11:56,938 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:11:56,940 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:11:56,940 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:11:56,940 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:11:56,940 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:11:56,974 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:11:56,981 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:11:57,053 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:11:57,054 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:11:57,172 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:11:57,173 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:11:57,184 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:11:57,189 : INFO : 
 logger import function
win_main ______  2021-11-05 15:11:57,189 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:11:57,298 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:11:57,304 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:11:57,308 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:11:57,407 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:11:57,521 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:11:57,608 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:11:57,735 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 15:11:57,848 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,849 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,850 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,851 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,852 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,853 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,854 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,855 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,856 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,857 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,858 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,859 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,860 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,861 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,862 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,863 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,864 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,865 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,866 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,867 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,868 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,869 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,870 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,871 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,872 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,873 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,874 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,875 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,876 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,877 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,878 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,879 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,880 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,881 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,882 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,883 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,884 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,885 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,886 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,887 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,888 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,889 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,890 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,891 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,892 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,893 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,894 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,895 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,896 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,897 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,898 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,899 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,900 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,901 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,902 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,903 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,904 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,905 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,906 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,907 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,908 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,909 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,910 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,911 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,912 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,913 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,914 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,915 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,916 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,917 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,918 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,919 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,920 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,921 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,922 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,923 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,924 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,925 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,926 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,927 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,928 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,929 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,930 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,930 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:11:57,946 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,947 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,948 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,949 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,950 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,951 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,952 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,953 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,954 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,955 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,956 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,957 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,958 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,959 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,960 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,961 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,962 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,963 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,964 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,965 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,966 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,967 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,968 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,969 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,970 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,971 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,972 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,973 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,974 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,975 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,976 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,977 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,978 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,979 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,980 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,981 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,982 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,983 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,984 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,985 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,986 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,987 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,988 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,989 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,990 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,991 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,992 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,993 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,994 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,995 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,996 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,997 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,998 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:57,999 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,000 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,001 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,002 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,003 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,004 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,005 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:58,006 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:58,007 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,008 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,009 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,010 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,011 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:11:58,012 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,013 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,014 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,015 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,016 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,017 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,018 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,019 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:11:58,020 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:11:58,021 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:11:58,022 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,022 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:11:58,022 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:11:58,022 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:11:58,107 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:11:58,111 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:11:58,113 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:11:58,114 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:14:30,172 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:14:30,200 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:14:30,207 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:14:30,207 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:14:30,207 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:14:30,207 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:14:30,242 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:14:30,250 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:14:30,327 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:14:30,442 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:14:30,442 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:14:30,458 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:14:30,465 : INFO : 
 logger import function
win_main ______  2021-11-05 15:14:30,465 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:14:30,577 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:14:30,590 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:14:30,592 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:14:30,683 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:14:30,781 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:14:30,862 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:14:30,987 : INFO : 
 win_main2 start class window_main lable and button
matplotlib ______  2021-11-05 15:15:14,680 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:15:14,700 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:15:14,700 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:15:14,700 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:15:14,704 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:15:14,704 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:15:14,743 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:15:14,747 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:15:14,822 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:15:14,952 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:15:14,952 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:15:14,964 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:15:14,967 : INFO : 
 logger import function
win_main ______  2021-11-05 15:15:14,967 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:15:15,080 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:15:15,086 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:15:15,090 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:15:15,190 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:15:15,290 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:15:15,361 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:15:15,494 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 15:15:15,634 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:15:15,634 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,635 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,636 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,637 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,637 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,637 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,638 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,638 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,638 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:15:15,638 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:15:15,638 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,639 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,640 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,640 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,640 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,640 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,640 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,641 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,642 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,643 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,644 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,645 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,646 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,647 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,648 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,649 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,650 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,651 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,652 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,653 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,653 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,654 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,654 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,654 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,654 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,655 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,656 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,657 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,658 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,659 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,660 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,661 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,661 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,661 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,661 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,661 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,662 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,663 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,663 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,663 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,664 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,665 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:15:15,666 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,667 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,668 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,672 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,674 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,675 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,675 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,675 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,676 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,676 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,676 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,676 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,676 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,677 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,677 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,677 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,678 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,678 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,679 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,679 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,679 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,679 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,679 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,680 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,681 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,682 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,683 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,684 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,685 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,686 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,687 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,688 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,688 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,688 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,688 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,689 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,689 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,689 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,690 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,691 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,692 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,693 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,693 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,694 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,695 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,696 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,697 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,698 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,699 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,700 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,701 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,702 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,703 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,704 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,705 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,706 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,707 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,708 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,709 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,710 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,711 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,712 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,713 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,714 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,715 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,716 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,717 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,718 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,719 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,720 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,721 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,722 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,723 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,724 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,725 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,726 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,727 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,728 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,729 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,730 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,731 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,732 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,733 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,734 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,735 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,736 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,737 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,737 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,737 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,737 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,737 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,738 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,739 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,740 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,741 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,742 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,743 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,744 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,745 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,746 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:15:15,766 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:15:15,766 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,766 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,766 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,766 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,767 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,768 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,768 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,768 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,768 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,768 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,769 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,772 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,776 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,780 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,784 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,788 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,792 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,796 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,800 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,804 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,808 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,812 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,816 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,820 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,824 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,828 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:15:15,832 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,833 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,837 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,841 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,845 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,849 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:15:15,853 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:15:15,958 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:15:15,961 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:15:15,963 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:15:15,964 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:15:59,972 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:15:59,992 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:15:59,998 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:15:59,998 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:15:59,998 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:15:59,998 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:16:00,042 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:16:00,042 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:16:00,112 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:16:00,252 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:16:00,257 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:16:00,267 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:16:00,272 : INFO : 
 logger import function
win_main ______  2021-11-05 15:16:00,273 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:16:00,426 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:16:00,434 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:16:00,441 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:16:00,567 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:16:00,685 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:16:00,766 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:16:00,887 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 15:16:01,027 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,028 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,029 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,030 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,031 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,032 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,033 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,034 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,035 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,035 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,035 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,035 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,035 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,036 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,037 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,038 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,045 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,045 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,045 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,046 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,046 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,046 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,047 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,047 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,047 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,047 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,048 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,049 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,053 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,054 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,055 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,056 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,057 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,057 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,057 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,057 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,057 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,058 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,059 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,060 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,061 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,062 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,063 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,064 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,065 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,066 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,067 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,068 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,069 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,070 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,070 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,070 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,070 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,070 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,071 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:16:01,072 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,073 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,074 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,074 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,074 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,074 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,074 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,075 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,076 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,077 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,078 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,079 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,080 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,081 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,082 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,083 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,084 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,084 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,084 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,084 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,084 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,085 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,086 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,087 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,088 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,089 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,090 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,091 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,092 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,093 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,094 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,095 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,096 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,097 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,098 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,099 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,100 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,101 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,102 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,103 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,104 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,105 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,106 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,107 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,108 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,109 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,110 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,111 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,112 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,113 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,114 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,115 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,116 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,117 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,122 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,127 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,132 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,137 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,152 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,157 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,162 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,167 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,172 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,177 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,182 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,187 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,192 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,202 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,212 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,217 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:16:01,222 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:16:01,312 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:16:01,319 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:16:01,320 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:16:01,321 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:17:33,674 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:17:33,693 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:17:33,695 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:17:33,695 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:17:33,695 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:17:33,695 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:17:33,735 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:17:33,742 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:17:33,819 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:17:33,941 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:17:33,941 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:17:33,953 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:17:33,955 : INFO : 
 logger import function
win_main ______  2021-11-05 15:17:33,955 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:17:34,083 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:17:34,091 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:17:34,098 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:17:34,208 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:17:34,310 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:17:34,399 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:17:34,527 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.font_manager ______  2021-11-05 15:17:34,640 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:17:34,640 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,640 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,641 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,642 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,643 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,644 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,645 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,646 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,647 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,648 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,649 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,650 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,651 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,652 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,653 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,654 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,655 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,656 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,657 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,658 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,659 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,660 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,661 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,662 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,663 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,664 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,665 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,666 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,666 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,667 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,668 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,669 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,670 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,671 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,672 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,673 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,674 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,675 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,676 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,677 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,678 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,679 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,680 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,683 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,684 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,685 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,686 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,687 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,688 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,689 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,690 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,691 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,692 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,693 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,694 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,695 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,696 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,697 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,698 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,699 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,700 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,701 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,702 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,703 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,704 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,705 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,706 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,707 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,708 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,709 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,710 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,711 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,712 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,713 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,714 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,715 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,716 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,717 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,718 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,719 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,720 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,721 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,722 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,723 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,724 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,725 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,726 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,727 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,727 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,740 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,741 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,742 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,743 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,744 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,745 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,746 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,747 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,748 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,749 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,750 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,751 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,752 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,753 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,754 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,755 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,756 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,757 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,758 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,759 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,760 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,761 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,762 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,763 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,764 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,765 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,766 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,767 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,768 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,769 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,770 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,771 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,772 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,773 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,774 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,775 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,776 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,777 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,778 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,779 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,780 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,781 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,781 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,781 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,781 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,781 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:17:34,782 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,782 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,782 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,782 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,782 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,783 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:17:34,783 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,783 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,783 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,783 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,784 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,785 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,786 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,787 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,788 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,789 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,790 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,791 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,792 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,793 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,794 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,795 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,796 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,797 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,798 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,799 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:17:34,800 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,801 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,802 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,803 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,804 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,805 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,806 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,807 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,808 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,809 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,810 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,811 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,812 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,813 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:17:34,814 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,815 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,816 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:17:34,817 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,818 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:17:34,819 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:17:34,917 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:17:34,921 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:17:34,923 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:17:34,924 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 15:32:06,936 : DEBUG : 
 matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
matplotlib ______  2021-11-05 15:32:06,970 : DEBUG : 
 CONFIGDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib ______  2021-11-05 15:32:06,973 : DEBUG : 
 matplotlib version 3.4.0
matplotlib ______  2021-11-05 15:32:06,973 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 15:32:06,973 : DEBUG : 
 platform is win32
matplotlib ______  2021-11-05 15:32:06,973 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'encodings.cp1252', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'pywin32_bootstrap', 'sphinxcontrib', 'pip', 'pip._internal', 'pip._internal.utils', 'pip._internal.utils.inject_securetransport', 'pip._internal.utils.typing', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'copy', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'glob', 'fnmatch', 'posixpath', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', 'msvcrt', '_winapi', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_21', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'matplotlib._api', 'matplotlib._api.deprecation', 'matplotlib.cbook', 'gzip', 'shlex', 'matplotlib._c_internal_utils', 'matplotlib.docstring', 'matplotlib.rcsetup', 'matplotlib.animation', 'uuid', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'matplotlib._animation_data', 'matplotlib.colors', 'PIL.PngImagePlugin', 'PIL.ImageFile', 'PIL.ImagePalette', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'matplotlib.scale', 'matplotlib.ticker', 'matplotlib.transforms', 'matplotlib._path', 'matplotlib.path', 'matplotlib.bezier', 'matplotlib._color_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib._enums', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'matplotlib.ft2font', 'dateutil', 'dateutil._version', 'kiwisolver', 'matplotlib.dates', 'dateutil.rrule', 'calendar', 'dateutil._common', 'dateutil.relativedelta', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'ctypes.wintypes', 'dateutil.parser.isoparser', 'matplotlib.units']
matplotlib ______  2021-11-05 15:32:07,020 : DEBUG : 
 CACHEDIR=C:\Users\MALIN Philipp\.matplotlib
matplotlib.font_manager ______  2021-11-05 15:32:07,039 : DEBUG : 
 Using fontManager instance from C:\Users\MALIN Philipp\.matplotlib\fontlist-v330.json
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The mathtext.fallback_to_cm rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: Support for setting the 'mathtext.fallback_to_cm' rcParam is deprecated since 3.3 and will be removed two minor releases later; use 'mathtext.fallback : 'cm' instead.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The validate_bool_maybe_none function was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,133 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.style.core ______  2021-11-05 15:32:07,134 : WARNING : 
 In C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data\stylelib\_classic_test.mplstyle: 
The animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.
matplotlib.pyplot ______  2021-11-05 15:32:07,368 : DEBUG : 
 Loaded backend qt5agg version unknown.
matplotlib.pyplot ______  2021-11-05 15:32:07,369 : DEBUG : 
 Loaded backend Qt5Agg version unknown.
GUI ______  2021-11-05 15:32:07,386 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 15:32:07,388 : INFO : 
 logger import function
win_main ______  2021-11-05 15:32:07,388 : INFO : 
 logging from start up
win_main ______  2021-11-05 15:32:07,539 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 15:32:07,546 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 15:32:07,550 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 15:32:07,669 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 15:32:07,781 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 15:32:07,881 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 15:32:08,016 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.category ______  2021-11-05 15:32:08,140 : INFO : 
 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
matplotlib.category ______  2021-11-05 15:32:08,141 : INFO : 
 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
matplotlib.category ______  2021-11-05 15:32:08,142 : INFO : 
 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
matplotlib.category ______  2021-11-05 15:32:08,143 : INFO : 
 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,156 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:32:08,157 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,158 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,159 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,160 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,161 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,162 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,163 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,164 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,165 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,166 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,167 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,168 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,169 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,170 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,170 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,171 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,172 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,173 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,174 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,175 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,176 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,177 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,178 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,179 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,180 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,181 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,182 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,182 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,183 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,184 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,185 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,186 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,187 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,188 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,189 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,190 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,191 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,192 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,193 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,194 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,195 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,196 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,197 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,198 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,199 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:32:08,200 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,201 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,202 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,203 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,204 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,205 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,206 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,207 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,208 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,209 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,210 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,211 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,212 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,213 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,214 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,215 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,216 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,217 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,218 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,219 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,220 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,221 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,222 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,223 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,224 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,225 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,226 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,227 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,228 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,229 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,230 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,231 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,232 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,233 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,234 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,235 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,236 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,236 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,250 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,251 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,252 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,253 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
matplotlib.font_manager ______  2021-11-05 15:32:08,254 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,255 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,256 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Bold Italic Art' (BLDITLAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,257 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,258 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,259 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,260 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,261 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,262 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,263 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,264 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,265 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,265 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,265 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,265 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,266 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,267 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque Desktop' (ARBSQDTP.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,268 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,269 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Kufi Outline Shaded' (KFOUTSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,270 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Simple Indust Shaded' (SPINDSHD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,271 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,272 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Old Antic Decorative' (OLDANDEC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,273 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,274 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,275 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,275 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,275 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,275 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,276 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,277 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,278 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'STCaiyun' (STCAIYUN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,279 : DEBUG : 
 findfont: score(<Font 'Led Italic Font' (LEDITFNT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,280 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'STFangsong' (STFANGSO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,281 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,282 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,282 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,282 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,282 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'STXihei' (STXIHEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline 2' (DWNSH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,283 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Old Antic Bold' (OLDANBLD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,284 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,285 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'PT Bold Arch' (PTBLDARC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,286 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,287 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,288 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'PT Simple Bold Ruled' (SPBLDRUL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,289 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,290 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Swashes' (DTNASKH4.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,291 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'STSong' (STSONG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,292 : DEBUG : 
 findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,293 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Simple Bold Jut Out' (SPBLDJUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,294 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline Shaded' (OLDOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,295 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,296 : DEBUG : 
 findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh' (DTNASKH0.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,297 : DEBUG : 
 findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,298 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,299 : DEBUG : 
 findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'STZhongsong' (STZHONGS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,300 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Mudir MT' (MUDIR.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Kufi Extended Outline' (KFEXTOUT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,301 : DEBUG : 
 findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,302 : DEBUG : 
 findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Italic Outline Art' (ITLOUTAR.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'STXingkai' (STXINGKA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,303 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'PT Bold Mirror' (PTBLDMRR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,304 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,305 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,306 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'DecoType Thuluth' (DTHULUTH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'STHupo' (STHUPO.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,307 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'FZYaoTi' (FZYTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,308 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,309 : DEBUG : 
 findfont: score(<Font 'STXinwei' (STXINWEI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Striped' (DWNSPSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,310 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,311 : DEBUG : 
 findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'PT Bold Heading' (PTBLDHAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,312 : DEBUG : 
 findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'STLiti' (STLITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBRBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'PT Bold Dusky' (PTBLDDSK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,313 : DEBUG : 
 findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Extensions' (DTNASKH3.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,314 : DEBUG : 
 findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'PT Bold Stars' (PTBLSSTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,315 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Variants' (DTNASKH2.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Monotype Koufi' (KOUFIBD.TTF) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,316 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Diwani Simple Outline' (DWNSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'PT Bold Broken' (PTBLDBRK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,317 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,318 : DEBUG : 
 findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'DecoType Naskh Special' (DTNASKH1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'AGA Arabesque' (ARABSQ.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'PT Separated Baloon' (PTSEPBAL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Outline' (FRSSPOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,319 : DEBUG : 
 findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Akhbar MT' (AKHBR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Farsi Simple Bold' (FRSSPBL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,320 : DEBUG : 
 findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,321 : DEBUG : 
 findfont: score(<Font 'Old Antic Outline' (OLDANOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'FZShuTi' (FZSTK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'LiSu' (SIMLI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,322 : DEBUG : 
 findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Diwani Letter' (DIWANLTR.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Simple Indust Outline' (SPINDOUT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Diwani Bent' (DIWANBNT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Diwani Outline Shaded' (DWNOUTSH.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'STKaiti' (STKAITI.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,323 : DEBUG : 
 findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Sanpya' (Sanpya.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Simple Outline Pat' (SPOUTPAT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,324 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Tera Special' (TSPECIAL1.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'YouYuan' (SIMYOU.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
matplotlib.font_manager ______  2021-11-05 15:32:08,325 : DEBUG : 
 findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
matplotlib.font_manager ______  2021-11-05 15:32:08,326 : DEBUG : 
 findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
win_main ______  2021-11-05 15:32:08,946 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 15:32:08,951 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 15:32:08,952 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 15:32:08,953 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 21:19:25,689 : DEBUG : 
 CONFIGDIR=/home/pi/.config/matplotlib
matplotlib ______  2021-11-05 21:19:25,697 : DEBUG : 
 matplotlib data path: /usr/share/matplotlib/mpl-data
matplotlib ______  2021-11-05 21:19:25,697 : DEBUG : 
 loaded rc file /etc/matplotlibrc
matplotlib ______  2021-11-05 21:19:25,706 : DEBUG : 
 matplotlib version 3.0.2
matplotlib ______  2021-11-05 21:19:25,707 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 21:19:25,707 : DEBUG : 
 platform is linux
matplotlib ______  2021-11-05 21:19:25,707 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sitecustomize', 'pip', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'matplotlib.cbook', 'glob', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'copy', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'dateutil', 'dateutil._version']
matplotlib ______  2021-11-05 21:19:25,835 : DEBUG : 
 $HOME=/home/pi
matplotlib ______  2021-11-05 21:19:25,836 : DEBUG : 
 CACHEDIR=/home/pi/.cache/matplotlib
matplotlib.font_manager ______  2021-11-05 21:19:25,841 : DEBUG : 
 Using fontManager instance from /home/pi/.cache/matplotlib/fontlist-v300.json
matplotlib.pyplot ______  2021-11-05 21:19:26,269 : DEBUG : 
 Loaded backend TkAgg version unknown.
GUI ______  2021-11-05 21:19:26,289 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 21:19:26,297 : INFO : 
 logger import function
win_main ______  2021-11-05 21:19:26,297 : INFO : 
 logging from start up
h5py._conv ______  2021-11-05 21:19:26,360 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:19:26,360 : DEBUG : 
 Creating converter from 5 to 7
h5py._conv ______  2021-11-05 21:19:26,361 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:19:26,361 : DEBUG : 
 Creating converter from 5 to 7
win_main ______  2021-11-05 21:19:26,460 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 21:19:26,495 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 21:19:26,499 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 21:19:26,707 : INFO : 
 start__ win_main2 start class window_main init
matplotlib ______  2021-11-05 21:21:24,877 : DEBUG : 
 CONFIGDIR=/home/pi/.config/matplotlib
matplotlib ______  2021-11-05 21:21:24,887 : DEBUG : 
 matplotlib data path: /usr/share/matplotlib/mpl-data
matplotlib ______  2021-11-05 21:21:24,887 : DEBUG : 
 loaded rc file /etc/matplotlibrc
matplotlib ______  2021-11-05 21:21:24,896 : DEBUG : 
 matplotlib version 3.0.2
matplotlib ______  2021-11-05 21:21:24,896 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 21:21:24,896 : DEBUG : 
 platform is linux
matplotlib ______  2021-11-05 21:21:24,897 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sitecustomize', 'pip', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'matplotlib.cbook', 'glob', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'copy', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'dateutil', 'dateutil._version']
matplotlib ______  2021-11-05 21:21:25,014 : DEBUG : 
 $HOME=/home/pi
matplotlib ______  2021-11-05 21:21:25,015 : DEBUG : 
 CACHEDIR=/home/pi/.cache/matplotlib
matplotlib.font_manager ______  2021-11-05 21:21:25,019 : DEBUG : 
 Using fontManager instance from /home/pi/.cache/matplotlib/fontlist-v300.json
matplotlib.pyplot ______  2021-11-05 21:21:25,321 : DEBUG : 
 Loaded backend TkAgg version unknown.
GUI ______  2021-11-05 21:21:25,336 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 21:21:25,339 : INFO : 
 logger import function
win_main ______  2021-11-05 21:21:25,340 : INFO : 
 logging from start up
h5py._conv ______  2021-11-05 21:21:25,386 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:21:25,386 : DEBUG : 
 Creating converter from 5 to 7
h5py._conv ______  2021-11-05 21:21:25,386 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:21:25,387 : DEBUG : 
 Creating converter from 5 to 7
win_main ______  2021-11-05 21:21:25,470 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 21:21:25,476 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 21:21:25,479 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 21:21:25,664 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 21:21:26,415 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 21:21:26,526 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 21:21:26,581 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.axes._base ______  2021-11-05 21:21:26,830 : DEBUG : 
 update_title_pos
matplotlib.font_manager ______  2021-11-05 21:21:26,869 : DEBUG : 
 findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 21:21:26,975 : DEBUG : 
 findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
matplotlib.axes._base ______  2021-11-05 21:21:26,979 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:21:28,249 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:21:28,323 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:21:29,226 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:21:29,298 : DEBUG : 
 update_title_pos
win_main ______  2021-11-05 21:21:30,203 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 21:21:30,218 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 21:21:30,223 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 21:21:30,226 : INFO : 
 __ END win_main2 start class window_main 
matplotlib ______  2021-11-05 21:23:53,843 : DEBUG : 
 CONFIGDIR=/home/pi/.config/matplotlib
matplotlib ______  2021-11-05 21:23:53,851 : DEBUG : 
 matplotlib data path: /usr/share/matplotlib/mpl-data
matplotlib ______  2021-11-05 21:23:53,851 : DEBUG : 
 loaded rc file /etc/matplotlibrc
matplotlib ______  2021-11-05 21:23:53,859 : DEBUG : 
 matplotlib version 3.0.2
matplotlib ______  2021-11-05 21:23:53,859 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 21:23:53,859 : DEBUG : 
 platform is linux
matplotlib ______  2021-11-05 21:23:53,859 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sitecustomize', 'pip', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'matplotlib.cbook', 'glob', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'copy', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'dateutil', 'dateutil._version']
matplotlib ______  2021-11-05 21:23:53,968 : DEBUG : 
 $HOME=/home/pi
matplotlib ______  2021-11-05 21:23:53,969 : DEBUG : 
 CACHEDIR=/home/pi/.cache/matplotlib
matplotlib.font_manager ______  2021-11-05 21:23:53,973 : DEBUG : 
 Using fontManager instance from /home/pi/.cache/matplotlib/fontlist-v300.json
matplotlib.pyplot ______  2021-11-05 21:23:54,287 : DEBUG : 
 Loaded backend TkAgg version unknown.
GUI ______  2021-11-05 21:23:54,301 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 21:23:54,306 : INFO : 
 logger import function
win_main ______  2021-11-05 21:23:54,306 : INFO : 
 logging from start up
matplotlib ______  2021-11-05 21:29:39,877 : DEBUG : 
 CONFIGDIR=/home/pi/.config/matplotlib
matplotlib ______  2021-11-05 21:29:39,885 : DEBUG : 
 matplotlib data path: /usr/share/matplotlib/mpl-data
matplotlib ______  2021-11-05 21:29:39,885 : DEBUG : 
 loaded rc file /etc/matplotlibrc
matplotlib ______  2021-11-05 21:29:39,893 : DEBUG : 
 matplotlib version 3.0.2
matplotlib ______  2021-11-05 21:29:39,893 : DEBUG : 
 interactive is False
matplotlib ______  2021-11-05 21:29:39,893 : DEBUG : 
 platform is linux
matplotlib ______  2021-11-05 21:29:39,893 : DEBUG : 
 loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_bootlocale', '_locale', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'sitecustomize', 'pip', 'threading', 'time', 'traceback', 'linecache', 'tokenize', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'token', '_weakrefset', 'logging', 'weakref', 'collections.abc', 'string', '_string', 'atexit', 'logging.handlers', 'socket', '_socket', 'selectors', 'math', 'select', 'errno', 'pickle', 'struct', '_struct', '_compat_pickle', '_pickle', 'queue', '_queue', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'fnmatch', 'ntpath', 'urllib', 'urllib.parse', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'ast', '_ast', 'platform', 'subprocess', 'signal', '_posixsubprocess', 'ctypes', '_ctypes', 'ctypes._endian', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'numpy.lib._iotools', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random.bit_generator', '_cython_0_29_23', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'inspect', 'dis', 'opcode', '_opcode', 'numpy.ma.extras', 'tkinter', '_tkinter', 'tkinter.constants', 'GUI', 'matplotlib', 'distutils', 'distutils.version', 'locale', 'pprint', 'tempfile', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'urllib.error', 'urllib.response', 'matplotlib.cbook', 'glob', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'copy', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', '__future__', 'six', 'six.moves', 'matplotlib._version', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'dateutil', 'dateutil._version']
matplotlib ______  2021-11-05 21:29:40,004 : DEBUG : 
 $HOME=/home/pi
matplotlib ______  2021-11-05 21:29:40,004 : DEBUG : 
 CACHEDIR=/home/pi/.cache/matplotlib
matplotlib.font_manager ______  2021-11-05 21:29:40,009 : DEBUG : 
 Using fontManager instance from /home/pi/.cache/matplotlib/fontlist-v300.json
matplotlib.pyplot ______  2021-11-05 21:29:40,310 : DEBUG : 
 Loaded backend TkAgg version unknown.
GUI ______  2021-11-05 21:29:40,325 : INFO : 
 set upp logger in puls_win.py
root ______  2021-11-05 21:29:40,329 : INFO : 
 logger import function
win_main ______  2021-11-05 21:29:40,329 : INFO : 
 logging from start up
h5py._conv ______  2021-11-05 21:29:40,375 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:29:40,375 : DEBUG : 
 Creating converter from 5 to 7
h5py._conv ______  2021-11-05 21:29:40,375 : DEBUG : 
 Creating converter from 7 to 5
h5py._conv ______  2021-11-05 21:29:40,376 : DEBUG : 
 Creating converter from 5 to 7
win_main ______  2021-11-05 21:29:40,459 : INFO : 
 logging from win_main2 start up
win_main ______  2021-11-05 21:29:40,465 : INFO : 
 logging from win_main2 start up
root ______  2021-11-05 21:29:40,467 : INFO : 
 Values loaded from load_setting
win_main ______  2021-11-05 21:29:40,659 : INFO : 
 start__ win_main2 start class window_main init
win_main ______  2021-11-05 21:29:41,408 : INFO : 
 win_main2 start class window_main init
win_main ______  2021-11-05 21:29:41,528 : INFO : 
 win_main2 start class window_main menuleiste
win_main ______  2021-11-05 21:29:41,601 : INFO : 
 win_main2 start class window_main lable and button
matplotlib.axes._base ______  2021-11-05 21:29:41,837 : DEBUG : 
 update_title_pos
matplotlib.font_manager ______  2021-11-05 21:29:41,879 : DEBUG : 
 findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
matplotlib.font_manager ______  2021-11-05 21:29:41,982 : DEBUG : 
 findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
matplotlib.axes._base ______  2021-11-05 21:29:41,987 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:29:43,268 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:29:43,342 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:29:44,218 : DEBUG : 
 update_title_pos
matplotlib.axes._base ______  2021-11-05 21:29:44,296 : DEBUG : 
 update_title_pos
win_main ______  2021-11-05 21:29:45,201 : INFO : 
 win_main2 start class window_main plot update
win_main ______  2021-11-05 21:29:45,209 : INFO : 
 win_main2 start class window_main logger
root ______  2021-11-05 21:29:45,209 : INFO : 
 Values were correktly imported
win_main ______  2021-11-05 21:29:45,212 : INFO : 
 __ END win_main2 start class window_main 
